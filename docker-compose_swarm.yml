version: "3.2"

services:
    frog:
        hostname: lamachine
        image: proycon/lamachine:latest
        command: bash -c "frog -S 12345"
        env_file:
            - .env.prod
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 3
            resources:
                limits:
                    cpus: '48'


    redis:
        hostname: redis
        image: redis:latest
        env_file:
            - .env.prod
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 3

    database:
        hostname: mongo
        image: mongo:latest
        env_file:
            - .env.prod
        volumes:
            - ./../data:/data/db
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 3

    worker: &worker-base
        build:
            context: .
            dockerfile: Dockerfile
        image: newsgac/worker
        depends_on:
            - redis
            - database
        hostname: celeryworker
        volumes:
            - ./newsgac:/newsgac/newsgac
        env_file:
            - .env.prod
        command: celery -A newsgac.tasks.celery_app worker -l info --concurrency 3 -n worker@%h
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 3
            resources:
                limits:
                    cpus: '24'


    frogworker:
        <<: *worker-base
        image: newsgac/frogworker
        depends_on:
            - redis
            - database
            - frog
        env_file:
            - .env.prod
        command: celery -A newsgac.tasks.celery_app worker -l info --concurrency 1 -n frogworker@%h -Q frog
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 3


    web:
        build:
            context: .
            dockerfile: Dockerfile
        image: newsgac/web
        depends_on:
            - database
            - worker
            - frog
        command: ["gunicorn", "--workers", "10", "--max-requests", "10", "--timeout", "80", "--bind", "0.0.0.0:5050", "--access-logfile", "-", "--error-logfile", "-", "newsgac.app:app"]
        env_file:
            - .env.prod
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 3


    jupyterhub:
        build:
            context: .
            dockerfile: jupyter/Dockerfile
        image: newsgac/jupyterhub
        volumes:
            - ./hub_notebooks:/notebooks
        depends_on:
            - redis
            - database
            - worker
            - frog
        env_file:
            - .env.prod
        deploy:
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 3
            replicas: 1

    nginx:
        build:
            context: nginx
            dockerfile: Dockerfile
        image: newsgac/nginx
        depends_on:
            - web
            - jupyterhub
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 3
        ports:
        - target: 80
          published: 5050
          protocol: tcp
          mode: host



    ngrok:
        depends_on:
            - nginx
        image: wernight/ngrok
        env_file:
            - .env.prod
        deploy:
            replicas: 1
            restart_policy:
                condition: any
                delay: 10s
                max_attempts: 3
